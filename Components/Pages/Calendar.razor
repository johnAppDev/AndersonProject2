@page "/calendar"
@rendermode InteractiveServer
<div>
    <h1>@year,@month</h1>
    <table>
        <thead>
            <tr>
                <th>Sun</th>
                <th>Mon</th>
                <th>Tue</th>
                <th>Wed</th>
                <th>Thu</th>
                <th>Fri</th>
                <th>Sat</th>
            </tr>
        </thead>
        <tbody>
            @for(int i = 0; i < 6; i++){
                <tr>
                    @for(int j = 7 * i; j < 7*i + 7; j++  ){
                        <td>@currentMonth[j]</td>
                    }
                </tr>
            }
        </tbody>
    </table>
    <button @onclick="getPreviousMonth">Back</button>
    <button @onclick="getNextMonth">Next</button>
</div>
@code{
    int[] currentMonth;
    int year;
    int month;
   public void getPreviousMonth(){
    if(month> 1){
        month -= 1;
    }else{
        month = 12;
        year -=1;
    }
    renderMonth(year, month);
   }
   public void getNextMonth(){
    if(month<12){
        month += 1;
    }else{
        month = 1;
        year +=1;
    }
    renderMonth(year, month);
   }
    protected override void OnInitialized(){
        year = 2025;
        month = 4;
       renderMonth(year, month);
    }
    void renderMonth(int year, int month){
        currentMonth = new int[42];
        int firstDay = GetFirstDay(year, month);
        int days = DateTime.DaysInMonth(year,month);
        for(int i = 0; i< currentMonth.Length; i++){
            if(i < firstDay){
            currentMonth[i] = 0;
            }else if(i >= firstDay+days){
                currentMonth[i] =0;
            }else{
                 currentMonth[i] = i- firstDay + 1;  
            }
        }
    }
    public static int GetFirstDay(int year, int month)
    {
        return (int)(new DateTime(year, month, 1 ).DayOfWeek);
    }
}